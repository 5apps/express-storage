#!/usr/bin/expect -f

# OMG THIS WAS A PAIN TO CREATE

# Template name is first arg.
if {$argc == 0} {puts "Please specify a grunt init template."; exit}
set template [lrange $argv 0 0]
set project "grunt-$template-example"

# Disable git pushing when debugging.
set gitpush true

# Save output for later use.
log_file -noappend /tmp/grunt-expect-out

# Spawn bash without all my crazy dotfiles stuff.
set timeout -1
spawn bash --noprofile --norc
match_max 100000

# Make the prompt look nice.
expect "$ "
send "PS1='\n$ '\r"
expect "\r"

# Cleanup any existing session.
expect "$ "
send "cd /tmp\r"
expect "$ "
send "rm -rf /tmp/$project\r"

# Session logging starts here.
expect "$ "
send "mkdir $project && cd $project\r"

# Initialize the current directory.
expect "$ "
send "git init\r"
expect "$ "
send "git remote add origin git@github.com:cowboy/$project.git\r"

# Note that the "--no-color" will be stripped out later.
expect "$ "
send "grunt init:$template --no-color\r"

# Don't start answering prompts until this line is encountered.
expect "Please answer the following:"

# Loop over all prompts.
expect {
  "Are these answers correct? (Y/n)" {send "\r"}
  "What versions of node does it run on?" {send "*"; exp_continue}
  "Description" {send "This is example output generated by the \"grunt init:$template\" task."; exp_continue}
  ") " {send "\r"; exp_continue}
}

# Pre-grunt file structure.
expect "$ "
send "tree\r"

# Let grunt grunt the newly-created file structure.
expect "$ "
send "grunt --no-color\r"

# Post-grunt file structure. Any built files should appear here.
expect "$ "
send "tree\r"

# Commit everything.
expect "$ "
send "git add .\r"
expect "$ "
send "git commit -m 'Committing example \"grunt init:$template\" task output.'\r"
if {$gitpush} {
  expect "$ "
  send "git push -u origin master\r"
}

# Session logging stops here.
expect "$ "
send "# EOF\n"

# Add meta-content to the README.
expect "$ "
send "echo -e '
### PROJECT CREATION TRANSCRIPT
The following is a transcript of the session in which this project and
repository were created. This is not actually a part of the \[grunt\]\[grunt\]
\"init:$template\" template, this session transcript was added afterwards. The
text after the `$` are the commands that were executed, and everything else is
program output. If you want to see the repository exactly as it was created by
grunt, browse \[the previous commit\](https://github.com/cowboy/$project/tree/HEAD~1).

Want to learn more? Check \[grunt\]\[grunt\] out.

\[grunt\]: https://github.com/cowboy/grunt

Note that this entire build process is automated by a rather complex \[expect
script\](https://github.com/cowboy/grunt/blob/master/dev/init.exp), which is
used to automate grunt in order to facilitate the creation of this and other
init task example repositories.

```' >> README.md\r"
expect "$ "
# Strip out everything before the "mkdir" and after the "EOF". Also remove any "--no-color" bits.
send "cat /tmp/grunt-expect-out | perl -ne's/ --no-color//;if(/^\\\$ mkdir/){\$x=1}elsif(/^\\\$ # EOF/){\$x=0}\$x&&print\$_' >> README.md\r"
expect "$ "
send "echo '```' >> README.md\r"

# Commit again.
expect "$ "
send "git add .\r"
expect "$ "
send "git commit -m 'Adding project creation transcript.'\r"
if {$gitpush} {
  expect "$ "
  send "git push -u origin master\r"
}

expect "$ "
send "exit\r"

expect eof
